I will be giving a presentation on an easy-to-use and flexible system to fracture animation models.  This is work my colleagues and I did last summer for Walt Disney Animation Studios, and I will be giving some examples of its use within the animated film BOLT.

One issue we needed to address was the increased frequency of near geometric degeneracies as we increased the complexity and richness of our models and crack surfaces.  Near geometric degeneracies are typefied by the example illustrated here, when you have two nearly coincident line segments.  Even if your model surface and crack surface are separately well-conditioned, it is impossible to control the interactions between the geometric components of one with the other, so such cases are bound to happen.  The problem is that naive use of fixed-precision floating point arithmetic will occasionally misclassify such near degeneracies, due to rounding.  One solution might be to use arbirary precision arithmetic, but this is costly computationally.

We take a hybrid approach: We first evaluate a geometric predicate in floating point, but now bound and propagate rounding errors.  If the result of the predicate cannot be reliably determined, we recompute using exact arithmetic (our specific implementation uses Shewchuk's expansion arithmetic algorithms).  The result is a significant increase in robustness of the system, with an insignificant performance hit, since exact arithmetic is rarely needed.
